import numpy as np
request_num_list = [2, 1, 3, 1, 3, 2, 2, 3, 2, 2, 3, 2, 3, 1, 3, 1, 2, 3, 3, 3, 1, 2, 3, 3, 2, 3, 2, 2, 2, 2, 1, 3, 1, 3, 3, 1, 2, 3, 3, 1, 2, 2, 2, 1, 3, 2, 1, 2, 1, 2, 1, 2, 3, 1, 2, 1, 1, 3, 3, 2, 2, 3, 2, 3, 3, 2, 3, 2, 2, 2, 3, 3, 2, 2, 2, 2, 3, 2, 3, 1, 3, 1, 3, 2, 2, 1, 1, 2, 1, 3, 2, 3, 3, 1, 2, 2, 2, 2, 1, 2]

resnet34_sms = [100, 49, 49, 49, 49, 49, 49, 98, 28, 28, 28, 28, 28, 28, 28, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 16, 32, 32, 32, 32, 32]
resnet34_op_latency = [35.5021, 39.2602, 39.2602, 39.6186, 39.2499, 39.6902, 39.2704, 33.5258, 74.0762, 74.0045, 74.0454, 73.9738, 74.1683, 74.2093, 74.2605, 45.9059, 72.2125, 72.407, 72.2534, 71.9974, 72.3149, 72.2432, 72.0896, 72.3558, 72.2534, 72.1101, 72.1818, 101.601, 109.998, 110.07, 110.121, 110.008, 109.804]

# 1.6
#resnet50_sms = [64, 56, 56, 49, 49, 56, 49, 49, 56, 49, 49, 28, 56, 49, 49, 56, 49, 49, 56, 49, 49, 56, 56, 28, 56, 28, 56, 56, 28, 56, 56, 28, 56, 56, 28, 56, 56, 28, 56, 56, 32, 56, 64, 32, 32, 64, 32, 32, 64]
#resnet50_op_latency = [21.3709, 10.2093, 41.9635, 19.8963, 22.5587, 41.9533, 19.753, 22.2413, 41.8714, 19.6403, 33.7408, 83.9782, 20.5722, 29.7984, 53.6371, 20.2547, 29.8803, 53.5142, 20.4493, 29.952, 53.76, 20.5722, 44.4518, 103.506, 23.296, 46.039, 63.7645, 23.2346, 45.9264, 63.703, 22.9786, 45.9776, 63.7133, 23.337, 45.9264, 63.6211, 23.1219, 45.9469, 63.8259, 23.2653, 68.2701, 129.741, 28.0576, 62.3104, 103.936, 27.8118, 62.505, 103.885, 27.6378,]

multi_stream_r34_latency_list = [3.86614, 3.83914, 3.82797, 3.91978, 5.47533, 5.02784, 2.77037, 4.19248, 4.25088, 4.37562, 3.50003, 3.56979, 3.65107, 3.7199, 4.38445, 4.45082, 4.40973, 3.67658, 3.68653, 3.57005, 3.65594, 4.3872, 4.32336, 4.37517, 3.48365, 3.54854, 4.37421, 4.31728, 4.40528, 2.77674, 4.13885, 4.40397, 4.63542, 2.77616, 3.59299, 3.6151, 4.17482, 4.42019, 4.316, 4.13171, 4.34086, 4.18237, 4.352, 4.27066, 4.35661, 2.78122, 3.66502, 3.68397, 4.17578, 4.28051, 4.26506, 4.19795, 4.43821, 4.31414, 3.56166, 3.29021, 4.30022, 4.41085, 4.35478, 3.49965, 3.5569, 3.64912, 3.50272, 2.76547, 2.744, 3.46909, 3.61469, 2.77424, 4.38374, 4.31232, 4.4968, 3.83389, 6.42022, 6.35814, 6.36243, 6.53786, 6.4057, 6.41949, 3.83779, 5.59789, 5.69494, 6.05248, 6.29722, 6.54422, 6.53306, 6.36237, 6.09277, 3.78128, 4.89213, 5.06621, 5.11094, 5.11386, 5.00979, 5.07626, 3.8328, 6.20035, 6.31219, 6.35066, 5.04973, 5.0975, 3.78531, 5.35994, 5.2128, 3.77926, 5.38278, 5.18013, 3.8361, 5.0169, 5.04458, 6.43315, 6.53386, 6.46026, 3.83872, 5.22022, 5.06698, 3.83091, 3.83366, 6.53971, 6.50355, 6.35824, 6.4737, 6.39152, 6.47232, 5.05878, 4.97747, 5.09462, 4.98336, 6.45629, 6.50653, 6.35101, 5.3672, 5.1991, 6.55866, 6.36688, 6.4704, 6.42784, 6.46813, 6.38269, 5.02595, 5.03472, 6.49757, 6.33261, 6.41971, 5.08947, 5.10704, 5.36464, 5.18323, 5.35885, 5.17869, 6.56877, 6.3313, 6.32291, 6.07846, 6.21248, 6.29795, 4.99546, 4.96595, 5.06032, 5.10694, 5.01504, 5.06294, 5.22819, 5.05757, 6.41504, 6.51146, 6.41632, 5.23146, 5.0632, 6.37936, 6.32554, 6.23098, 3.83427, 6.14042, 6.11584, 6.30474, 3.77386, 5.89472, 6.17478, 6.26122, 5.20515, 5.06755, 5.26566, 5.34458, 3.83926, 3.84614, 5.27126, 5.34528, 3.83923, 6.54144, 6.28643, 6.21437, 5.04352, 5.14845, 6.44579, 6.44826, 6.39325, 6.39846, 6.20227, 6.34576, 3.83446, 5.02442, 5.05293, 5.23917, 5.07587, 5.05408, 4.9896, 4.82902, 5.05274, 3.83661, 3.86326, 3.80819]


mig_r34_latency_list = [3.26022, 3.25478, 3.25331, 3.2561, 3.25696, 3.2607, 3.25533, 3.25738, 3.26013, 3.25686, 3.25443, 3.26138, 3.25651, 3.23104, 3.23158, 3.23229, 3.23158, 3.23446, 3.23744, 3.2351, 3.23958, 3.23382, 3.23008, 3.23322, 3.16022, 2.77094, 2.77056, 2.7705, 2.77114, 2.76778, 2.77178, 2.76915, 2.77082, 2.76915, 2.77142, 2.76947, 2.77923, 2.7721, 2.76915, 2.77549, 2.77171, 2.76938, 2.76874, 2.77283, 2.77453, 2.77005, 2.77424, 2.77955, 2.76989, 2.77485, 2.76653, 2.77341, 2.77024, 2.76854, 2.76877, 2.77686, 2.77296, 2.77165, 2.76669, 2.77357, 2.77155, 2.77126, 2.77443, 2.77082, 2.77283, 2.76931, 2.77062, 2.85354, 2.77034, 2.77197, 2.76611, 2.77146, 2.77014, 2.77094, 2.76995, 2.76627, 2.76947, 2.77178, 2.7687, 2.77408, 2.7753, 2.76787, 2.76598, 2.76947, 2.772, 2.76586, 2.76931, 2.76685, 2.77117, 2.77142, 2.76445, 2.76461, 2.77318, 2.77229, 2.76688, 2.76928, 2.77034, 2.77309, 2.77254, 2.77328, 2.77142, 2.77546, 2.77018, 2.77034, 2.7721, 2.76698, 2.76998, 2.77536, 2.76912, 2.77094, 2.76899, 2.76426, 2.77558, 2.77059, 2.76832, 2.76602, 2.76874, 2.7719, 2.77043, 2.76803, 2.7671, 2.77702, 2.7711, 2.76931, 2.76954, 2.77088, 2.76688, 2.77494, 2.77821, 2.77059, 2.77056, 2.77402, 2.77162, 2.77235, 2.77373, 2.77213, 2.76998, 2.76861, 2.76778, 2.77229, 2.76547, 2.7681, 2.77302, 2.77162, 2.75984, 2.77005, 2.77098, 2.76909, 2.77142, 2.7696, 2.76877, 2.76909, 2.77635, 2.77469, 2.77158, 2.7689, 2.77098, 2.77363, 2.7745, 2.7751, 2.7737]

multi_stream_r50_latency_list = [2.70842 ,6.50746 ,6.75507 ,9.51309 ,6.82941 ,3.14435 ,9.26794 ,6.27184 ,6.87798 ,6.70291 ,2.67306 ,9.31344 ,9.90054 ,6.83165 ,7.60109 ,6.73059 ,10.0716 ,6.13078 ,6.82931 ,2.64896 ,6.63763 ,2.67738 ,11.6972 ,4.55338 ,7.24448 ,6.82026 ,4.31949 ,12.4113 ,4.31677 ,13.3059 ,11.7558 ,16.0791 ,9.77037 ,11.01 ,12.9597 ,9.69821 ,6.72806 ,6.18499 ,9.95146 ,4.32534 ,10.4176 ,16.4392 ,15.4456 ,6.11037 ,6.60016 ,4.3024 ,13.3353 ,12.257 ,8.05709 ,8.19178 ,8.25706 ,9.57264 ,6.44867 ,6.75043 ,17.4697 ,4.57024 ,12.1936 ,11.8876 ,4.56458 ,16.7567 ,15.3389 ,4.56035 ,11.822 ,13.9393 ,13.3566 ,11.4125 ,8.5047 ,8.60634 ,8.57773 ,8.86502 ,9.45165 ,8.19213 ,12.8318 ,14.0054 ,12.488 ,11.9506 ,11.6118 ,4.56374 ,4.57565 ,10.3931 ,11.7504 ,12.0194 ,13.9031 ,18.2193 ,8.38941 ,8.89664 ,8.06835 ,18.3508 ,6.48861 ,7.01923 ,7.05619 ,6.89443 ,4.55846 ,4.56422 ,4.53699 ,4.56474 ,11.1422 ,7.0417 ,6.83472 ,6.4743 ,7.00346 ,8.6264 ,8.6223 ,8.19389 ,17.5824 ,19.3565 ,4.55792 ,12.0678 ,16.2938 ,17.8666 ,15.7545 ,4.55366 ,18.3197 ,9.95142 ,8.37197 ,8.55194 ,8.61264 ,18.8016 ,5.10573 ,4.58822 ,7.28922 ,6.71443 ,15.7964 ,11.4943 ,12.9887 ,15.88 ,4.53344 ,4.57002 ,11.7808 ,4.56358 ,12.8889 ,13.6152 ,10.4213 ,6.09293 ,6.72931 ,11.6116 ,4.56694 ,13.1583 ,13.7901 ,7.25363 ,6.54019 ,12.0789 ,11.6519 ,4.57162 ,10.8845 ,13.7451 ,12.9844 ,6.52333 ,7.00419 ,4.56813 ,4.53242 ,4.5695 ,11.8755 ,13.3032 ,15.7344 ,13.3497 ,14.2581 ,10.6464 ,14.7669 ,17.9224 ,4.5281 ,7.20739 ,6.97574 ,4.5343 ,17.0895 ,12.7098 ,12.573 ,4.5328 ,18.6184 ,16.6158 ,4.57258 ,13.4888 ,10.7416 ,6.94432 ,7.09168 ,4.55053 ,4.5633 ,13.345 ,13.8797 ,12.5804 ,14.3786 ,4.56586 ,4.56918 ,16.2278 ,6.62195 ,6.83274 ,8.71226 ,8.44771 ,8.52086 ,6.69526 ,6.52669 ,10.3936 ,5.82995 ,7.17424 ,4.52954 ,10.3029 ,14.426 ,13.8871 ,10.3781 ,16.6815 ,4.88045 ,4.53773 ,4.57008 ,14.0904 ,12.2275 ,4.56637 ,4.57613 ,4.57158 ,13.5149 ,13.8764 ,4.56374 ,17.7436 ,4.52886 ,6.56394 ,7.1023 ,17.4791 ,13.1616 ,12.7629 ,17.9693 ,4.53315 ,6.88586 ,6.8648 ,4.53642 ,6.21219 ,6.97565 ,13.2495 ,14.1767 ,16.0973 ,4.56902 ,4.54384 ,12.5278 ,13.7858 ,16.7117 ,11.6334 ,12.2798 ,7.05933 ,6.95197 ,16.0358 ,11.0778 ,6.60714 ,7.29002 ,17.5275 ,15.8353 ,13.1263 ,12.2433 ,7.24285 ,6.46144 ,17.2628 ,12.2471 ,13.5492 ,17.726 ,13.8924 ,13.1171 ,7.24579 ,6.59152 ,14.9713 ,13.7569 ,8.49709 ,8.784 ,8.53955 ,4.53258 ,7.01344 ,7.35037 ,6.5103 ,7.31635 ,4.57226 ,4.52998 ,18.0403 ,8.35642 ,8.51693 ,8.81379 ,6.50602 ,6.91958 ,17.1881 ,13.1664 ,13.7946 ,6.56176 ,7.05014 ,15.9588 ,12.194 ,4.56643 ,6.97696 ,7.84861 ,13.4637 ,13.3198 ,13.1632 ,19.6539 ,6.59075 ,7.3849 ,4.26259 ,17.8588 ,4.26461 ,11.3081 ,6.02938 ,6.51341 ,9.85466 ,4.23123 ,9.97709 ,11.2006 ,4.2279 ,4.26211 ,6.07149 ,6.54579 ,12.5816 ,13.0452 ,8.14246 ,8.03974 ,7.51853 ,10.1802 ,12.2943 ,12.0063 ,4.2255 ,11.5422 ,11.8562 ,8.21581 ,7.75757 ,7.58246 ,4.2665 ,8.33731 ,7.70077 ,7.51613 ,17.3363 ,12.2738 ,11.4529 ,4.22749 ,10.2537 ,11.5682 ,6.66822 ,7.26403 ,16.6108 ,4.56413 ,12.1834 ,12.6672 ,15.9563 ,17.9497 ,4.53299 ,6.4128 ,7.24304 ,9.83078 ,13.2858 ,13.1955 ,11.9941 ,4.53398 ,4.56291 ,11.0072 ,7.1079 ,6.59949 ,6.58502 ,7.38694 ,4.59482 ,13.2402 ,14.5886 ,4.56698 ,4.53328 ,12.041 ,4.52982 ,4.56608 ,10.2138 ,14.1859 ,13.2777 ,4.52944 ,4.5807 ,4.55974 ,8.69462 ,8.17293 ,8.56822 ,13.3622 ,13.6073 ,8.5761 ,8.9433 ,8.98355 ,4.52976 ,10.7995 ,4.56746 ,13.9316 ,13.1398 ,4.5199 ,10.6052 ,4.56445 ,6.73312 ,7.24285 ,13.4715 ,12.8523 ,13.6196 ,13.1108 ,11.002 ,12.1687 ,11.3178 ,11.8597 ,4.5657 ,4.208 ,8.26806 ,8.11328 ,7.84205 ,10.7816 ,12.178 ,12.6015 ,9.79427 ,11.5638 ,4.20336 ,4.21635 ,10.2317 ,15.9657 ,12.7749 ,11.841 ,15.5307 ,16.18 ,6.38595 ,6.0935 ,4.1703 ,7.74314 ,7.87952 ,7.61786 ,4.20858 ,10.0735 ,6.24989 ,6.62163 ,11.9331 ,11.3103 ,5.19165 ,6.20931 ,14.6328 ,10.2227 ,11.5054 ,10.6906 ,6.14522 ,7.66749 ,6.66733 ,7.21395 ,4.57053 ,7.6897 ,7.04634 ,16.9208 ,11.4521 ,12.1111 ,12.0892 ,6.64198 ,6.80928 ,4.52742 ,7.01334 ,6.9177 ,4.53302 ,15.6345 ,4.5576 ,4.53405 ,6.9625 ,6.43667 ,11.8043 ,15.087 ,5.16474 ,12.1557 ,12.7432 ,11.2681 ,8.28621 ,8.91389 ,8.64666 ,4.57648 ,13.1339 ,13.9362 ,6.74461 ,7.19411 ,12.6106 ,11.8174 ,10.7443 ,4.53046 ,4.57082 ,11.8582 ,17.3379 ,4.56038 ,13.9095 ,13.4443 ,11.3283 ,4.59798 ,11.73 ,13.3997 ,12.9748 ,8.61683 ,8.42317 ,8.87146 ,10.5448 ,4.53494 ,6.92963 ,7.61094 ,6.54186 ,7.17926 ,5.68019 ,6.64307 ,15.9071 ,4.53219 ,6.65549 ,7.0624 ,13.7296 ,12.3976 ,13.2899 ,13.9285 ,10.5477 ,14.2755 ,12.9908 ,12.1992 ,4.57747 ,4.56256 ,5.68867 ,6.72762 ,10.6553 ,7.24304 ,5.66294]
multi_stream_vgg19_latency_list = [9.6631 ,7.16346 ,7.5561 ,7.35776 ,15.3012 ,9.87459 ,16.9222 ,16.93 ,10.8421 ,9.75779 ,11.2209 ,17.0905 ,10.9237 ,10.891 ,14.7157 ,8.3673 ,7.09126 ,9.53478 ,9.39494 ,7.79312 ,7.3008 ,14.7372 ,8.3696 ,6.16371 ,9.28598 ,9.25978 ,6.14352 ,9.09485 ,9.60675 ,14.7783 ,8.46618 ,7.19946 ,8.4121 ,17.141 ,10.9749 ,10.7829 ,7.34912 ,9.30336 ,8.8593 ,8.05862 ,6.15613 ,7.30966 ,12.7077 ,10.5012 ,10.4373 ,10.6883 ,10.6325 ,15.142 ,26.5329 ,26.3734 ,15.2426 ,26.5825 ,15.2204 ,13.0591 ,10.0635 ,14.8114 ,17.2372 ,15.4315 ,11.989 ,12.9991 ,10.0506 ,11.9834 ,29.1561 ,18.734 ,18.6661 ,12.5165 ,10.0425 ,15.6008 ,16.5428 ,16.5966 ,17.3956 ,17.644 ,10.0755 ,13.8783 ,28.9766 ,18.1747 ,18.6351 ,25.0526 ,14.3139 ,10.021 ,12.063 ,10.1212 ,21.2771 ,30.7285 ,10.6463 ,12.0327 ,10.6335 ,12.8562 ,26.5471 ,15.1684 ,19.2583 ,18.0568 ,19.3753 ,18.9068 ,10.5971 ,12.8623 ,13.3085 ,12.1102 ,26.5843 ,15.0802 ,10.615 ,13.7332 ,13.7597 ,16.6404 ,10.5947 ,10.7012 ,24.3414 ,12.0174 ,13.1637 ,13.8402 ,17.9894 ,18.496 ,10.5936 ,19.0256 ,16.2609 ,12.6525 ,10.633 ,10.6359 ,30.6936 ,19.5564 ,19.2249 ,18.0389 ,17.1389 ,22.4506 ,15.7151 ,12.236 ,27.1261 ,17.701 ,26.5478 ,15.1048 ,10.6124 ,17.4643 ,17.9128 ,27.4458 ,15.9707 ,20.9674 ,16.0414 ,12.8586 ,16.0641 ,22.2008 ,26.6132 ,14.8565 ,19.2792 ,15.3941 ,20.8954 ,16.0235 ,31.0053 ,31.4804 ,19.1945 ,20.6278 ,21.5847 ,20.1201 ,12.8627 ,26.5676 ,15.174 ,30.7802 ,19.9783 ,19.272 ,14.2478 ,12.9795 ,26.3824 ,14.8465 ,16.6899 ,13.4796 ,26.5212 ,14.9238 ,10.6382 ,12.0301 ,10.696 ,19.7837 ,13.2098 ,13.2669 ,12.6999 ,13.6697 ,25.7446 ,15.8504 ,14.2916 ,13.2059 ,30.846 ,19.6978 ,19.7327 ,27.4729 ,28.0363 ,16.8164 ,17.8053 ,26.6161 ,15.2255 ,17.2076 ,16.3039 ,14.0112 ,10.6268 ,10.5836 ,18.5376 ,15.9997 ,19.0464 ,15.0485 ,18.3101 ,16.2305 ,14.8719 ,10.6574 ,24.164 ,10.6692 ,10.6467 ,13.6647 ,15.0277 ,19.9989 ,15.6208 ,12.9434 ,30.618 ,19.709 ,19.515 ,10.6157 ,22.7695 ,10.6093 ,15.0349 ,22.8278 ,18.3451 ,16.4269 ,10.8476 ,10.6361 ,16.0136 ,30.8746 ,19.802 ,19.8566 ,13.8404 ,10.6291 ,18.8485 ,16.3063 ,10.673 ,10.6616 ,26.4878 ,15.0201 ,10.6298 ,30.9313 ,19.666 ,31.2107 ,19.6432 ,17.456 ,10.6167 ,13.5804 ,17.21 ,17.7111 ,14.8309 ,17.0431 ,18.5939 ,10.6735 ,13.0583 ,10.596 ,10.6366 ,30.6395 ,19.3504 ,20.3914 ,10.6024 ,20.9735 ,16.3965 ,13.5404 ,12.2006 ,15.9488 ,18.7363 ,13.0626 ,17.0197 ,16.3459 ,20.073 ,21.5444 ,30.8068 ,19.678 ,20.1445 ,15.1596 ,10.6624 ,26.8934 ,15.9101 ,26.4858 ,14.8679 ,10.6147 ,13.6705 ,16.7297 ,18.6833 ,13.0111 ,10.6024 ,14.5084 ,29.3145 ,19.7279 ,19.8789 ,10.6417 ,10.646 ,17.2564 ,17.4473 ,10.6753 ,10.6203 ,17.5349 ,17.4325 ,10.5908 ,10.6636 ,14.0297 ,26.5221 ,14.9979 ,19.0259 ,15.1394 ,17.1079 ,10.6505 ,10.6401 ,13.3922 ,14.0243 ,21.6366 ,16.5041 ,26.8102 ,15.3337 ,30.8948 ,30.8581 ,19.4179 ,25.0873 ,14.7328 ,22.3926 ,11.89 ,24.607 ,14.1892 ,22.1432 ,9.86525 ,11.7647 ,24.7209 ,14.17 ,13.5606 ,28.6339 ,18.3868 ,18.8101 ,11.7051 ,13.9416 ,12.5406 ,28.4577 ,18.3438 ,17.9142 ,18.79 ,14.5344 ,12.5812 ,12.3761 ,12.7046 ,16.2245 ,18.5564 ,10.5962 ,19.8306 ,21.2355 ,16.3431 ,16.1123 ,17.5118 ,10.6196 ,12.7907 ,14.0784 ,24.172 ,24.9867 ,15.2152 ,13.4994 ,15.2444 ,10.6755 ,12.1754 ,12.916 ,10.6315 ,14.0821 ,10.6668 ,12.8732 ,10.6498 ,12.9331 ,13.7131 ,30.7703 ,20.1414 ,19.6924 ,10.6039 ,23.6587 ,13.0471 ,10.6027 ,13.2902 ,23.9785 ,10.6498 ,11.7702 ,12.6677 ,12.8432 ,30.766 ,19.6832 ,30.6519 ,30.8501 ,19.8448 ,19.7095 ,26.5304 ,15.0006 ,30.7603 ,20.0033 ,19.6491 ,9.75613 ,11.941 ,12.6239 ,28.1711 ,18.0481 ,18.2146 ,19.0536 ,9.75946 ,9.77146 ,11.4612 ,16.1955 ,15.1101 ,12.859 ,16.7423 ,16.8247 ,18.5992 ,16.7252 ,9.79466 ,9.73968 ,11.4091 ,12.1643 ,27.95 ,18.0647 ,17.6192 ,9.74576 ,24.8177 ,14.5659 ,12.4001 ,13.2546 ,23.8477 ,26.57 ,15.2275 ,10.64 ,18.5557 ,16.0636 ,12.9331 ,12.9117 ,13.1108 ,10.6285 ,19.8695 ,19.3926 ,16.7928 ,13.774 ,31.1298 ,19.5135 ,19.4382 ,11.5156 ,10.5919 ,10.634 ,13.887 ,10.6004 ,16.2736 ,13.2452 ,12.8877 ,26.4982 ,14.8084 ,17.0404 ,16.5321 ,15.0681 ,10.6115 ,13.4648 ,14.7683 ,10.6809 ,13.2491 ,10.6375 ,12.8945 ,10.6719 ,30.8023 ,30.7843 ,19.4442 ,10.6682 ,26.5698 ,15.2661 ,22.7873 ,16.5588 ,10.6687 ,24.9421 ,14.9493 ,13.1015 ,10.5943 ,10.6324 ,14.2945 ,12.969 ,13.6941 ,12.8644 ,10.6411 ,13.6198 ,26.5446 ,15.1079]



mig_r50_latency_list = [6.95706, 6.90266, 6.89805, 6.89011, 6.90621, 3.85958, 3.85146, 3.86298, 3.86086, 3.8575, 3.84912, 3.85101, 3.85405, 3.8543, 3.8561, 3.86381, 3.84995, 3.85686, 3.85277, 3.85155, 3.85296, 3.86102, 3.85904, 3.8631, 3.85968, 3.85062, 3.85837, 3.84976, 3.86349, 3.85453, 3.85242, 3.8521, 3.8535, 3.85888, 3.85574, 3.8521, 3.8553, 3.85901, 3.85056, 3.85366, 3.85846, 3.85107, 3.85469, 3.86106, 3.85373, 3.85837, 3.85706, 3.86058, 3.856, 3.86067, 3.85434, 3.86253, 3.86048, 3.85568, 3.85894, 3.85686, 3.85027, 3.8559, 3.88413, 3.85629, 3.85466, 3.85536, 3.84739, 3.84557, 3.85494, 3.84464, 3.85107, 3.84835, 3.85437, 3.85446, 3.8457, 3.84768, 3.85549, 3.85206, 3.84736, 3.84771, 3.84829, 3.85072, 3.86195, 3.85062, 3.8544, 3.85562, 3.85958, 3.85965, 3.85056, 3.85891, 3.85456, 3.85446, 3.84886, 3.8552, 3.85859, 3.85853, 3.85686, 3.8513, 3.84982, 3.85549, 3.84726, 3.85302, 3.84691, 3.84918, 3.85219, 3.86192, 3.8512, 3.85133, 3.85008, 3.84768, 3.84467, 3.84768, 3.85869, 3.85677, 3.84435, 3.86035, 3.85533, 3.85286, 3.85261, 3.85293, 3.8527, 3.83898, 3.8535, 3.84992, 3.85667, 3.8584, 3.86163, 3.85539, 3.84928, 3.848, 3.84819, 3.8496, 3.84963, 3.85728, 3.85373, 3.85366, 3.85011, 3.84573, 3.84858, 3.85142, 3.85226, 3.84925, 3.84589, 3.84986, 3.85491, 3.84698, 3.84877, 3.85786, 3.85488, 3.8495, 3.84867, 3.84979, 3.85152, 3.84694, 3.84733, 3.84944, 3.85034, 3.84733, 3.85264, 3.85738, 3.85757, 3.86253, 3.84986, 3.85664, 3.86224, 3.85821, 3.85309, 3.84502, 3.85712, 3.84688, 3.84861, 3.84867, 3.85037, 3.85958, 3.85392, 3.84954, 3.85126, 3.84922, 3.85146, 3.8513, 3.85152, 3.84797, 3.85248, 3.85354, 3.84902, 3.8527, 3.85037, 3.85469, 3.84912, 3.84704, 3.84422, 3.85757, 3.85034, 3.85434, 3.85002, 3.85293, 3.85229, 3.85398, 3.85002, 3.84326, 3.8519, 3.8536, 3.8536, 3.85645, 3.84941, 3.85046, 3.85395, 3.8503, 3.84522, 3.85478, 3.85613, 3.86006, 3.85418, 3.84893, 3.85133, 3.8488, 3.84842, 3.85014, 3.85302, 3.85011, 3.84982, 3.84992, 3.84643, 3.84506, 3.85728, 3.8609, 3.86016, 3.85171, 3.85587, 3.85104, 3.85366, 3.85706, 3.8545, 3.92573, 3.84768, 3.85574, 3.85056, 3.84995, 3.85155, 3.85584, 3.85629, 3.85466, 3.84877, 3.85837, 3.84768, 3.8521, 3.85098, 3.84192, 3.84973, 3.85622, 3.8543, 3.85862, 3.85155, 3.86131, 3.85875, 3.85062, 3.85088, 3.84973, 3.85181, 3.8559, 3.84768, 3.85046, 3.84701, 3.852, 3.84915, 3.8537, 3.85402, 3.85046, 3.85942, 3.84595, 3.85507, 3.85574, 3.8495, 3.85424, 3.85696, 3.85325, 3.85955, 3.8537, 3.84339, 3.85437, 3.85008, 3.85818, 3.85674, 3.84666, 3.8497, 3.85008, 3.86106, 3.86131, 3.84384, 3.85683, 3.85386, 3.84502, 3.85424, 3.85357, 3.84506, 3.85149, 3.84704, 3.84982, 3.85824, 3.85517, 3.84621, 3.85408, 3.84746, 3.85402, 3.8463, 3.85574, 3.83782, 3.84714, 3.8559, 3.856, 3.85043, 3.85152, 3.84422, 3.85523, 3.85402, 3.84314, 3.85696, 3.8544, 3.85142, 3.84941, 3.85094, 3.85261, 3.85056, 3.85501, 3.85056, 3.85622, 3.84966, 3.85702, 3.85142, 3.84656, 3.84582, 3.84963, 3.8553, 3.85446, 3.84618, 3.8416, 3.85152, 3.84806, 3.84922, 3.85171, 3.85024, 3.85318, 3.85043, 3.85677, 3.85254, 3.84755, 3.85088, 3.84922, 3.85542, 3.84749, 3.8543, 3.85574, 3.85184, 3.85821, 3.84947, 3.85808, 3.84675, 3.85606, 3.85789, 3.85936, 3.85219, 3.84925, 3.84714, 3.84365, 3.85005, 3.85693, 3.84365, 3.84502, 3.84394, 3.85363, 3.85334, 3.85235, 3.84752, 3.856, 3.84864, 3.84678, 3.85517, 3.85165, 3.85645, 3.86032, 3.85085, 3.85059, 3.8488, 3.85434, 3.856, 3.84851, 3.84992, 3.8536, 3.8497, 3.85654, 3.84845, 3.85091, 3.85219, 3.85622, 3.85594, 3.84864, 3.84851, 3.8448, 3.84822, 3.84867, 3.85526, 3.84387, 3.84934, 3.84726, 3.83747, 3.8575, 3.85405, 3.86205, 3.84653, 3.85434, 3.85462, 3.85072, 3.86477, 3.8559, 3.84893, 3.85206, 3.84816, 3.85117, 3.85296, 3.8512, 3.85283, 3.84659, 3.84685, 3.84589, 3.84838, 3.84653, 3.85008, 3.85613, 3.85533, 3.85101, 3.84074, 3.84323, 3.84883, 3.84736, 3.84954, 3.85382, 3.85472, 3.8535, 3.84538, 3.8585, 3.85194, 3.8511, 3.84848, 3.84669, 3.84634, 3.8488, 3.84768, 3.84813, 3.85206, 3.84826, 3.85299, 3.85517, 3.85616, 3.85427, 3.85478, 3.85283, 3.85517, 3.85488, 3.84883, 3.85162, 3.85133, 3.84771, 3.84771, 3.85078, 3.85232, 3.85085, 3.84906, 3.85203, 3.85933, 3.85373, 3.85056, 3.84902, 3.85821, 3.85398, 3.84915, 3.85318, 3.85136, 3.8471, 3.85427, 3.8585, 3.85302, 3.85606, 3.84931, 3.85434, 3.84864, 3.85101, 3.85482, 3.85725, 3.86083, 3.85226, 3.85306, 3.8439, 3.8513, 3.8561, 3.84454, 3.85392, 3.85549, 3.84714, 3.85469, 3.85536, 3.85066, 3.84531, 3.85347, 3.85469, 3.85258, 3.84925, 3.84989, 3.84237]
mig_r50_latency_list = [15.897, 15.913, 15.8852, 15.8726, 15.8823, 15.8896, 15.8956, 15.862, 15.8895, 15.8998, 15.8784, 15.8841, 15.8952, 15.8902, 13.8229, 8.89219, 8.88621, 8.89136, 8.86576, 8.89389, 8.88061, 8.87786, 8.89437, 8.8912, 8.88518, 8.88912, 8.89226, 8.88368, 8.86147, 8.87299, 8.8719, 8.87386, 8.88134, 8.8768, 8.87277, 8.88934, 8.88742, 8.88291, 8.88774, 8.88442, 8.89296, 8.89462, 8.89568, 8.8897, 8.88154, 8.86816, 8.86218, 8.88864, 8.85363, 8.87571, 8.87238, 8.8649, 8.88106, 8.87152, 8.87523, 8.90064, 8.89456, 8.89725, 8.8919, 8.88912, 8.8849, 8.8753, 8.87094, 8.87747, 8.88384, 8.88634, 8.88749, 8.88928, 8.88934, 8.89293, 8.89843, 8.8791, 8.87731, 8.89382, 8.88163, 8.87859, 8.89667, 8.8897, 8.8807, 8.88499, 8.87066, 8.8841, 8.89958, 8.89446, 8.88934, 8.9255, 8.95773, 8.94138, 8.86691, 8.85581, 8.89603, 8.89216, 8.87309, 8.89072, 8.89126, 8.86067, 8.88566, 8.86909, 8.86995, 8.87754, 8.87251, 8.88752, 8.87619, 8.87638, 8.85712, 8.86307, 8.8872, 8.88829, 8.87693, 8.88886, 8.88509, 8.87757, 8.88314, 8.89152, 8.89462, 8.8895, 8.89485, 8.88323, 8.87962, 8.88698, 8.87456, 8.8695, 8.87978, 8.88816, 8.87581, 8.88544, 8.8904, 8.88448, 8.87517, 8.8945, 8.86998, 8.8521, 8.87546, 8.8695, 8.86522, 8.86512, 8.86861, 8.888, 8.8911, 8.86515, 8.86688, 8.87222, 8.88125, 8.86973, 8.85971, 8.87245, 8.8816, 8.88928, 8.87235, 8.86432, 8.86298, 8.88634, 8.87968, 8.86061, 8.86246, 8.88515, 8.87594, 8.87622, 8.88224, 8.88458, 8.88509, 8.87738, 8.88282, 8.86518, 8.85936, 8.8599, 8.88509, 8.86803, 8.89421, 8.89309, 8.87229, 8.888, 8.89178, 8.88304, 8.88704, 8.88749, 8.87741, 8.88419, 8.88026, 8.87331, 8.86157, 8.88819, 8.88995, 8.84928, 8.88883, 8.85075, 8.88067, 8.87728, 8.88435, 8.88275, 8.88064, 8.88464, 8.87802, 8.87936, 8.8928, 8.87021, 8.87846, 8.88672, 8.85693, 8.86512, 8.85795, 8.87578, 8.8953, 8.87651, 8.85398, 8.8825, 8.85885, 8.88963, 8.86349, 8.8647, 8.89024, 8.88368, 8.85664, 8.86432, 8.88592, 8.88886, 8.88413, 8.88893, 8.87885, 8.87174, 8.89574, 8.86358, 8.88912, 8.86403, 8.88605, 8.86435, 8.85411, 8.85786, 8.88589, 8.87926, 8.89277, 8.88938, 8.85894, 8.88915, 8.87088, 8.87626, 8.89491, 8.87507, 8.88579, 8.88966, 8.88605, 8.8896, 8.87818, 8.88605, 8.8833, 8.91162, 8.8641, 8.88998, 8.88704, 8.87907, 8.88538, 8.85056, 8.88883, 8.86458, 8.88509, 8.88858, 8.87661, 8.87418, 8.89197, 8.88656, 8.89088, 8.86726, 8.87872, 8.8833, 8.88061, 8.88419, 8.87542, 8.87139, 8.87312, 8.8576, 8.88672, 8.89142, 8.88237, 8.88173, 8.88224, 8.88214, 8.86874, 8.87795, 8.88134, 8.85978, 8.87104, 8.87389, 8.86166, 8.89341, 8.88144, 8.87888, 8.88778, 8.88077, 8.85914, 8.86912, 8.88931, 8.8544, 8.88218, 8.86445, 8.8831, 8.88621, 8.8832, 8.84925, 8.8647, 8.88954, 8.85485, 8.87971, 8.88685, 8.87942, 8.89184, 8.86586, 8.87869, 8.86794, 8.86736, 8.86941, 8.87197, 8.86915, 8.87885, 8.88307, 8.88474, 8.88653, 8.8665, 8.86557, 8.85168, 8.87978, 8.89334, 8.87322, 8.86832, 8.87558, 8.88675, 8.8608, 8.87667, 8.86576, 8.89376, 8.8919, 8.8864, 8.86298, 8.87088, 8.86934, 8.8801, 8.87686, 8.85626, 8.86618, 8.87827, 8.89693, 8.88595, 8.88163, 8.88275, 8.88195, 8.87286, 8.89117, 8.84851, 8.8888, 8.89459, 8.85619, 8.87315, 8.8824, 8.86829, 8.88538, 8.87037, 8.89014, 8.86867, 8.87488, 8.89123, 8.88797, 8.87078, 8.88534, 8.88106, 8.86253, 8.86048, 8.88675, 8.89459, 8.88842, 8.89056, 8.89293, 8.87728, 8.88442, 8.8815, 8.88019, 8.8808, 8.85917, 8.88349, 8.87459, 8.8833, 8.87782, 8.88138, 8.87549, 8.8735, 8.89398, 8.88077, 8.86538, 8.85341, 8.87968, 8.87917, 8.87805, 8.88944, 8.88374, 8.87008, 8.87267, 8.87898, 8.89744, 8.87181, 8.89018, 8.88624, 8.88762, 8.8777, 8.88806, 8.88003, 8.8688, 8.88989, 8.88643, 8.88518, 8.88154, 8.88998, 8.88077, 8.88269, 8.86486, 8.89216, 8.8847, 8.85437, 8.88586, 8.8929, 8.87222, 8.86803, 8.87616, 8.86339, 8.86854, 8.86336, 8.88931, 8.89514, 8.89411, 8.86874, 8.88371, 8.8935, 8.85152, 8.86774, 8.89088, 8.87664, 8.88186, 8.8872, 8.87482, 8.8825, 8.88378, 8.8951, 8.87664, 8.89306, 8.85936, 8.88746, 8.87686, 8.89254, 8.88861, 8.89075, 8.86576, 8.86922, 8.8655, 8.85827, 8.87693, 8.85699, 8.88358, 8.8872, 8.8799, 8.88861, 8.85776, 8.87373, 8.87891, 8.88634, 8.88416, 8.87728, 8.86317, 8.88118, 8.87878, 8.88403, 8.90038, 8.85901, 8.884, 8.86938, 8.88646, 8.87242, 8.87309, 8.87613, 8.88538, 8.88128]

resnet101_sms = [49, 16, 49, 49, 49, 49, 49, 49, 49, 49, 49, 28, 49, 28, 49, 49, 28, 49, 49, 28, 49, 49, 49, 28, 32, 28, 56, 32, 28, 56, 32, 28, 56, 32, 28, 56, 32, 28, 56, 32, 28, 56, 32, 28, 56, 32, 28, 56, 32, 28, 56, 32, 28, 56, 32, 28, 56, 32, 28, 56, 32, 28, 56, 32, 28, 56, 32, 28, 56, 32, 28, 56, 32, 28, 56, 32, 28, 56, 32, 28, 56, 32, 28, 56, 32, 28, 56, 32, 28, 56, 32, 28, 16, 32, 16, 32, 32, 16, 32, 32, ] 
resnet101_op_latency = [40.3251, 21.3709, 44.7795, 19.8042, 22.4256, 45.1891, 19.8861, 22.3437, 44.9024, 19.9168, 33.9558, 84.3264, 28.2214, 39.6902, 53.6678, 28.3648, 39.5469, 53.6986, 28.2317, 39.7107, 53.8931, 28.4877, 55.5725, 103.301, 35.7171, 45.9366, 63.6723, 35.6659, 45.8854, 63.447, 36.0346, 45.8445, 63.6621, 35.6454, 45.7626, 63.6518, 35.8093, 45.865, 63.744, 35.6557, 45.8342, 63.4675, 35.7888, 45.9264, 63.703, 35.5738, 45.7933, 63.488, 35.543, 45.8854, 63.6109, 35.6966, 45.9264, 63.488, 35.7274, 46.0186, 63.4573, 35.7376, 45.7421, 63.4061, 35.5635, 46.0288, 63.4163, 35.84, 46.0493, 63.4982, 35.6864, 45.9264, 63.5597, 35.9322, 45.9366, 63.6826, 35.9322, 45.7626, 63.4163, 35.8195, 45.9674, 63.785, 35.8093, 45.8138, 63.6826, 35.6864, 45.824, 63.7133, 35.799, 45.8138, 63.8362, 35.6557, 45.824, 63.8976, 35.8912, 85.9648, 177.725, 38.9632, 90.0301, 103.772, 39.1578, 90.1018, 103.895, 38.9939,]

# 1.8
#vgg19_sms = [98, 98, 100, 49, 49, 100, 56, 64, 64, 64, 100, 49, 56, 56, 56, 100, 32, 32, 32, 32, 64, 64, 64, 64]
#vgg19_op_latency = [20.7974, 260.649, 0.08192, 257.679, 483.564, 0.08192, 230.973, 434.145, 435.507, 433.316, 0.08192, 384.932, 537.672, 537.088, 539.341, 0.09216, 261.755, 261.642, 261.704, 261.755, 0.09216, 1321.44, 190.525, 262.584]
vgg19_sms = [49, 49, 108, 49, 49, 108, 49, 49, 49, 49, 108, 56, 56, 98, 98, 108, 64, 64, 64, 64, 108, 32, 32, 4]
vgg19_op_latency = [41.5027, 564.05, 0.07168, 258.478, 485.13, 0.08192, 280.996, 562.842, 558.572, 558.336, 0.08192, 263.199, 539.044, 367.084, 367.462, 0.14336, 157.133, 157.092, 157.102, 157.87, 0.08192, 1321.26, 190.157, 263.823]


resnet50_sms = [64, 64, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 28, 49, 28, 49, 49, 28, 49, 49, 28, 49, 49, 49, 28, 32, 28, 56, 32, 28, 56, 56, 28, 56, 32, 28, 56, 32, 28, 56, 32, 32, 16, 32, 16, 32, 32, 16, 32, 32]
resnet50_op_latency = [21.2992, 0.08192, 19.4048, 44.8205, 19.8554, 22.2003, 44.8614, 19.7325, 22.4256, 44.9229, 19.8144, 34.304, 84.3162, 28.1805, 39.7312, 53.5245, 28.2112, 39.5776, 53.5142, 28.2624, 39.7312, 53.6678, 28.0883, 55.5418, 103.373, 35.7274, 45.7933, 63.5904, 35.8912, 45.8854, 63.6621, 23.2038, 45.7626, 63.5494, 36.055, 46.0902, 63.6006, 35.9219, 46.0186, 63.6314, 36.0858, 68.7206, 178.196, 39.3216, 90.6342, 103.905, 39.4035, 90.2758, 104.038, 39.3933]

mobilenet_sms = [28, 49, 49, 56, 49, 56, 49, 28, 28, 28, 28, 16, 32, 16, 32, 16, 32, 16, 32, 16, 32, 16, 32, 16, 32, 16, 32, 100, 100,]
mobilenet_op_latency = [12.3802, 10.6701, 11.8886, 9.58464, 13.568, 8.3456, 20.8896, 12.8, 20.8794, 10.9568, 34.4883, 11.008, 22.5485, 7.2192, 38.441, 7.13728, 38.2566, 7.17824, 38.2669, 7.29088, 38.2976, 7.29088, 38.2464, 8.79616, 26.8186, 5.77536, 51.159, 0.08192, 10.3117]

darknet_sms = [49, 100, 49, 100, 49, 16, 49, 100, 49, 100, 49, 100, 32, 28, 32, 28, 32, 100, 28, 32, 32, 32, 32, 16, ]
darknet_op_latency = [17.92, 0.09216, 67.1334, 0.08192, 70.0314, 34.9696, 69.7958, 0.07168, 93.7062, 19.7427, 93.3683, 0.28672, 126.044, 27.607, 125.993, 27.5763, 126.013, 0.09216, 239.872, 32.1946, 173.343, 32.3994, 173.117, 45.9469]


samping = 10

def gen_mig_fcfs_util():
    mig_limit = 50
    util_timeline = []

    overall_lat = 0.0
    for lat in  resnet34_op_latency:
        overall_lat += lat
    overall_lat /= 1000
    print(overall_lat)
    for lat in mig_latency_list:
        ratio = lat / overall_lat
        for opid in range(0, len(resnet34_op_latency)):
            op_lat = resnet34_op_latency[opid] * ratio
            sm = resnet34_sms[opid]
            if sm > mig_limit:
                    sm = mig_limit
            #print(op_lat)
            while(op_lat/samping > 1):
                util_timeline.append(sm)
                op_lat /= samping
    print(len(util_timeline))

    file_name = "mig_util.txt"
    wf = open(file_name, "w")
    for i in range(0, len(util_timeline)):
        line = str(i) + " " + str(util_timeline[i]) + "\n"
        wf.write(line)


def gen_multi_stream_util():
    util_timeline = []

    overall_lat = 0.0
    for lat in  resnet34_op_latency:
        overall_lat += lat
    overall_lat /= 1000
    print(overall_lat)
    cur_req_id = 0
    for lat_id in range(0, len(request_num_list)):
        req_num = request_num_list[lat_id]
        max_lat = -1
        for lid in range(cur_req_id, cur_req_id+req_num):
            max_lat = multi_stream_latency_list[lid] if multi_stream_latency_list[lid] > max_lat else max_lat
        ratio = max_lat / overall_lat
        for opid in range(0, len(resnet34_op_latency)):
            op_lat = resnet34_op_latency[opid] * ratio
            sm = resnet34_sms[opid] * req_num
            if sm > 100:
                    sm = 100
            #print(op_lat)
            while(op_lat/samping > 1):
                util_timeline.append(sm)
                op_lat /= samping
    print(len(util_timeline))
    file_name = "multi_stream_util.txt"
    wf = open(file_name, "w")
    for i in range(0, len(util_timeline)):
        line = str(i) + " " + str(util_timeline[i]) + "\n"
        wf.write(line)


def gen_latency_cdf():

    # sort the data:
    data = mig_r50_latency_list
    data_sorted = np.sort(data)[0:len(data)-20]

    # calculate the proportional values of samples
    p = 1. * np.arange(len(data_sorted)) / (len(data_sorted) - 1)
    wf = open("mig_r50_latency.txt", "w")
    for i in range(0, len(p)):
        line = str(data_sorted[i]) + " " + str(p[i]*100) + "\n"
        wf.write(line)


def gen_one_req_timeline():
    file_name = "resnet50_sm_timeline.txt"
    file_name_1 = "resnet50_model_timeline.txt"
    wf = open(file_name, "w")
    wf1 = open(file_name_1, "w")
    timestamp = 10
    timeline = []
    left_timeline = []
    total_lat = 0
    total_sms = 108
    max_sm = 0
    for opid in range(0, len(resnet50_sms)):
        sm = resnet50_sms[opid]
        if sm > max_sm:
            max_sm = sm
        op_lat = resnet50_op_latency[opid]
        total_lat += op_lat
        while(op_lat > 0):
            timeline.append(sm)
            left_timeline.append(total_sms - sm)
            op_lat -= timestamp
    print(total_lat)
    
    for i in range(0, len(timeline)):
        line = str(i) + " " + str(timeline[i]) + "\n"
        wf.write(line)

        line1 = str(i) + " " + str(max_sm) + "\n"
        wf1.write(line1)

    wf.close()
    wf1.close()

def gen_co_req_timeline():
    file_name = "runtime_total_timeline.txt"
    max_sm_file = "max_sm.txt"
    beyond_sm_file = "beyond_sm.txt"
    wf = open(file_name, "w")
    maxwf = open(max_sm_file, "w")
    bywf = open(beyond_sm_file, "w")
    timestamp = 10
    timeline = []
    timeline1 = []
    total_lat = 0
    total_sms = 108
    for opid in range(0, len(resnet50_sms)):
        sm = resnet50_sms[opid]
        op_lat = resnet50_op_latency[opid]
        total_lat += op_lat
        while(op_lat > 0):
            timeline.append(sm)
            op_lat -= timestamp
    
    total_lat = 0
    for opid in range(0, len(vgg19_sms)):
        sm = vgg19_sms[opid]
        op_lat = vgg19_op_latency[opid]
        total_lat += op_lat
        while(op_lat > 0):
            timeline1.append(sm)
            op_lat -= timestamp
    
    iter_timeline = []
    if len(timeline) < len(timeline1):
        iter_timeline = timeline1
    else:
        iter_timeline = timeline

    conflict_cnt = 0.0
    for i in range(0, len(iter_timeline)):

        if (i >= len(timeline)):
            add_sm = timeline1[i]
        elif (i >= len(timeline1)):
            add_sm = timeline[i]
        else:
            add_sm = timeline1[i] + timeline[i]

        line =  str(i) + " " + str(add_sm) + "\n"
        wf.write(line)

        line1 = str(i) + " " + str(108) + "\n"
        maxwf.write(line1)

        if add_sm < 108:
            line2 = str(i) + " " + str(108) + "\n"
        else:
            conflict_cnt += 1
            line2 = str(i) + " " + str(add_sm) + "\n"
        bywf.write(line2)
    print(conflict_cnt*1.0 / len(iter_timeline))

    wf.close()

def gene_co_total_timeline():
    file_name = "runtime_total_timeline.txt"
    wf_name = "co_total_timeline.txt"
    rf = open(file_name, "r")
    wf = open(wf_name, "w")
    ts = 0
    for sm in rf.readlines():
        sm = sm.split(" ")[1]
        sm = sm.replace("\n", "")
        line = str(ts) + " " + str(sm) + "\n"
        wf.write(line)
        ts += 1
    wf.close()

def gene_gpu_base_timeline():
    file_name = "gpu_base_timeline.txt"
    wf = open(file_name, "w")
    total_line = 2660
    for i in range(0, total_line, 10):
        line = str(i) + " " + "108" + "\n"
        wf.write(line)
    wf.close()

def gene_beyond_sm_timeline():
    out_name = "beyond_sm.txt"
    input_name = "runtime_total_timeline.txt"
    rf = open(input_name, "r")
    wf = open(out_name, "w")
    idx = 0
    for line in rf.readlines():
        sm = line.replace("\n", "").split(" ")[1]
        sm = int(sm)
        if sm < 108:
            sm = 108
        wline = str(idx) + " " + str(sm) + "\n"
        wf.write(wline)
        idx += 1
    wf.close()


def add_zero():
    rfile_name = "timeline.txt"
    wfile_name = "add_zero_timeline.txt"
    rf = open(rfile_name, "r")
    wf = open(wfile_name, "w")
    for line in rf.readlines():
        items = line.split(" ")
        ts = items[0]
        sm = items[1]
        wline = str(ts) + "0 " + str(sm)
        wf.write(wline)
    wf.close()

def gene_long_timeline():
    rfile_name = "timeline.txt"
    wfile_name = "add_long_timeline.txt"
    rf = open(rfile_name, "r")
    wf = open(wfile_name, "w")
    ts = 0
    for line in rf.readlines():
        items = line.split(" ")
        for cnt in range(0, 10):
            sm = items[1]
            wline = str(ts) + " " + str(64) + "\n"
            ts += 1
            wf.write(wline)
    wf.close()





if __name__ == "__main__":
    #gen_mig_fcfs_util()
    #gen_multi_stream_util()
    #gen_latency_cdf()
    #gen_one_req_timeline()
    #gen_co_req_timeline()
    #gene_co_total_timeline()
    #gene_gpu_base_timeline()
    #gene_beyond_sm_timeline()
    #add_zero()
    gene_long_timeline()

