#include "hip/hip_runtime.h"

#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(224) candidate2(float* __restrict__ Input, float* __restrict__ kernel, float* __restrict__ compute) {
  float conv2d_nchw[16];
  __shared__ float pad_temp_shared[448];
  __shared__ float kernel_shared[2048];
  conv2d_nchw[0] = 0.000000e+00f;
  conv2d_nchw[1] = 0.000000e+00f;
  conv2d_nchw[2] = 0.000000e+00f;
  conv2d_nchw[3] = 0.000000e+00f;
  conv2d_nchw[4] = 0.000000e+00f;
  conv2d_nchw[5] = 0.000000e+00f;
  conv2d_nchw[6] = 0.000000e+00f;
  conv2d_nchw[7] = 0.000000e+00f;
  conv2d_nchw[8] = 0.000000e+00f;
  conv2d_nchw[9] = 0.000000e+00f;
  conv2d_nchw[10] = 0.000000e+00f;
  conv2d_nchw[11] = 0.000000e+00f;
  conv2d_nchw[12] = 0.000000e+00f;
  conv2d_nchw[13] = 0.000000e+00f;
  conv2d_nchw[14] = 0.000000e+00f;
  conv2d_nchw[15] = 0.000000e+00f;
  for (int rc_outer_outer = 0; rc_outer_outer < 32; ++rc_outer_outer) {
    __syncthreads();
    pad_temp_shared[((int)threadIdx.x)] = Input[((((rc_outer_outer * 3136) + ((((int)threadIdx.x) / 28) * 196)) + ((((int)blockIdx.x) % 7) * 28)) + (((int)threadIdx.x) % 28))];
    pad_temp_shared[(((int)threadIdx.x) + 224)] = Input[(((((rc_outer_outer * 3136) + ((((int)threadIdx.x) / 28) * 196)) + ((((int)blockIdx.x) % 7) * 28)) + (((int)threadIdx.x) % 28)) + 1568)];
    kernel_shared[((int)threadIdx.x)] = kernel[(((((((int)blockIdx.x) / 7) * 65536) + ((((int)threadIdx.x) >> 4) * 512)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15))];
    kernel_shared[(((int)threadIdx.x) + 224)] = kernel[((((((((int)blockIdx.x) / 7) * 65536) + ((((int)threadIdx.x) >> 4) * 512)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 7168)];
    kernel_shared[(((int)threadIdx.x) + 448)] = kernel[((((((((int)blockIdx.x) / 7) * 65536) + ((((int)threadIdx.x) >> 4) * 512)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 14336)];
    kernel_shared[(((int)threadIdx.x) + 672)] = kernel[((((((((int)blockIdx.x) / 7) * 65536) + ((((int)threadIdx.x) >> 4) * 512)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 21504)];
    kernel_shared[(((int)threadIdx.x) + 896)] = kernel[((((((((int)blockIdx.x) / 7) * 65536) + ((((int)threadIdx.x) >> 4) * 512)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 28672)];
    kernel_shared[(((int)threadIdx.x) + 1120)] = kernel[((((((((int)blockIdx.x) / 7) * 65536) + ((((int)threadIdx.x) >> 4) * 512)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 35840)];
    kernel_shared[(((int)threadIdx.x) + 1344)] = kernel[((((((((int)blockIdx.x) / 7) * 65536) + ((((int)threadIdx.x) >> 4) * 512)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 43008)];
    kernel_shared[(((int)threadIdx.x) + 1568)] = kernel[((((((((int)blockIdx.x) / 7) * 65536) + ((((int)threadIdx.x) >> 4) * 512)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 50176)];
    kernel_shared[(((int)threadIdx.x) + 1792)] = kernel[((((((((int)blockIdx.x) / 7) * 65536) + ((((int)threadIdx.x) >> 4) * 512)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 57344)];
    if (((int)threadIdx.x) < 32) {
      kernel_shared[(((int)threadIdx.x) + 2016)] = kernel[((((((((int)blockIdx.x) / 7) * 65536) + ((((int)threadIdx.x) >> 4) * 512)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 64512)];
    }
    __syncthreads();
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) % 14)] * kernel_shared[((((int)threadIdx.x) / 14) * 128)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 14)] * kernel_shared[((((int)threadIdx.x) / 14) * 128)]));
    conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) % 14)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 16)]));
    conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 14)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 16)]));
    conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((int)threadIdx.x) % 14)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 32)]));
    conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 14)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 32)]));
    conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((int)threadIdx.x) % 14)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 48)]));
    conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 14)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 48)]));
    conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((int)threadIdx.x) % 14)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 64)]));
    conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 14)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 64)]));
    conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((int)threadIdx.x) % 14)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 80)]));
    conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 14)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 80)]));
    conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((int)threadIdx.x) % 14)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 96)]));
    conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 14)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 96)]));
    conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((int)threadIdx.x) % 14)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 112)]));
    conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 14)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 112)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 28)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 1)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 42)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 1)]));
    conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 28)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 17)]));
    conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 42)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 17)]));
    conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 28)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 33)]));
    conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 42)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 33)]));
    conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 28)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 49)]));
    conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 42)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 49)]));
    conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 28)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 65)]));
    conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 42)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 65)]));
    conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 28)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 81)]));
    conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 42)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 81)]));
    conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 28)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 97)]));
    conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 42)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 97)]));
    conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 28)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 113)]));
    conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 42)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 113)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 56)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 2)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 70)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 2)]));
    conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 56)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 18)]));
    conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 70)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 18)]));
    conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 56)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 34)]));
    conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 70)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 34)]));
    conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 56)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 50)]));
    conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 70)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 50)]));
    conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 56)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 66)]));
    conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 70)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 66)]));
    conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 56)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 82)]));
    conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 70)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 82)]));
    conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 56)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 98)]));
    conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 70)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 98)]));
    conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 56)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 114)]));
    conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 70)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 114)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 84)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 3)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 98)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 3)]));
    conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 84)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 19)]));
    conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 98)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 19)]));
    conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 84)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 35)]));
    conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 98)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 35)]));
    conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 84)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 51)]));
    conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 98)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 51)]));
    conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 84)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 67)]));
    conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 98)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 67)]));
    conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 84)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 83)]));
    conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 98)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 83)]));
    conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 84)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 99)]));
    conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 98)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 99)]));
    conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 84)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 115)]));
    conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 98)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 115)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 112)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 4)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 126)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 4)]));
    conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 112)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 20)]));
    conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 126)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 20)]));
    conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 112)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 36)]));
    conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 126)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 36)]));
    conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 112)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 52)]));
    conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 126)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 52)]));
    conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 112)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 68)]));
    conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 126)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 68)]));
    conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 112)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 84)]));
    conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 126)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 84)]));
    conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 112)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 100)]));
    conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 126)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 100)]));
    conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 112)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 116)]));
    conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 126)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 116)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 140)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 5)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 154)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 5)]));
    conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 140)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 21)]));
    conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 154)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 21)]));
    conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 140)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 37)]));
    conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 154)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 37)]));
    conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 140)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 53)]));
    conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 154)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 53)]));
    conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 140)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 69)]));
    conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 154)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 69)]));
    conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 140)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 85)]));
    conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 154)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 85)]));
    conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 140)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 101)]));
    conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 154)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 101)]));
    conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 140)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 117)]));
    conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 154)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 117)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 168)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 6)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 182)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 6)]));
    conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 168)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 22)]));
    conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 182)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 22)]));
    conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 168)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 38)]));
    conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 182)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 38)]));
    conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 168)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 54)]));
    conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 182)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 54)]));
    conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 168)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 70)]));
    conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 182)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 70)]));
    conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 168)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 86)]));
    conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 182)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 86)]));
    conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 168)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 102)]));
    conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 182)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 102)]));
    conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 168)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 118)]));
    conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 182)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 118)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 196)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 7)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 210)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 7)]));
    conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 196)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 23)]));
    conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 210)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 23)]));
    conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 196)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 39)]));
    conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 210)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 39)]));
    conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 196)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 55)]));
    conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 210)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 55)]));
    conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 196)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 71)]));
    conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 210)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 71)]));
    conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 196)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 87)]));
    conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 210)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 87)]));
    conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 196)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 103)]));
    conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 210)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 103)]));
    conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 196)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 119)]));
    conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 210)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 119)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 224)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 8)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 238)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 8)]));
    conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 224)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 24)]));
    conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 238)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 24)]));
    conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 224)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 40)]));
    conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 238)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 40)]));
    conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 224)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 56)]));
    conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 238)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 56)]));
    conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 224)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 72)]));
    conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 238)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 72)]));
    conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 224)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 88)]));
    conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 238)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 88)]));
    conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 224)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 104)]));
    conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 238)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 104)]));
    conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 224)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 120)]));
    conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 238)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 120)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 252)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 9)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 266)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 9)]));
    conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 252)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 25)]));
    conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 266)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 25)]));
    conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 252)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 41)]));
    conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 266)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 41)]));
    conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 252)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 57)]));
    conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 266)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 57)]));
    conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 252)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 73)]));
    conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 266)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 73)]));
    conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 252)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 89)]));
    conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 266)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 89)]));
    conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 252)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 105)]));
    conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 266)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 105)]));
    conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 252)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 121)]));
    conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 266)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 121)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 280)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 10)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 294)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 10)]));
    conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 280)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 26)]));
    conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 294)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 26)]));
    conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 280)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 42)]));
    conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 294)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 42)]));
    conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 280)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 58)]));
    conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 294)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 58)]));
    conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 280)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 74)]));
    conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 294)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 74)]));
    conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 280)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 90)]));
    conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 294)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 90)]));
    conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 280)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 106)]));
    conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 294)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 106)]));
    conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 280)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 122)]));
    conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 294)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 122)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 308)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 11)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 322)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 11)]));
    conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 308)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 27)]));
    conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 322)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 27)]));
    conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 308)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 43)]));
    conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 322)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 43)]));
    conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 308)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 59)]));
    conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 322)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 59)]));
    conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 308)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 75)]));
    conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 322)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 75)]));
    conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 308)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 91)]));
    conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 322)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 91)]));
    conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 308)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 107)]));
    conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 322)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 107)]));
    conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 308)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 123)]));
    conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 322)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 123)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 336)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 12)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 350)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 12)]));
    conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 336)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 28)]));
    conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 350)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 28)]));
    conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 336)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 44)]));
    conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 350)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 44)]));
    conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 336)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 60)]));
    conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 350)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 60)]));
    conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 336)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 76)]));
    conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 350)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 76)]));
    conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 336)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 92)]));
    conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 350)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 92)]));
    conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 336)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 108)]));
    conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 350)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 108)]));
    conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 336)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 124)]));
    conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 350)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 124)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 364)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 13)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 378)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 13)]));
    conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 364)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 29)]));
    conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 378)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 29)]));
    conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 364)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 45)]));
    conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 378)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 45)]));
    conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 364)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 61)]));
    conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 378)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 61)]));
    conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 364)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 77)]));
    conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 378)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 77)]));
    conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 364)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 93)]));
    conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 378)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 93)]));
    conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 364)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 109)]));
    conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 378)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 109)]));
    conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 364)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 125)]));
    conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 378)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 125)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 392)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 14)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 406)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 14)]));
    conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 392)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 30)]));
    conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 406)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 30)]));
    conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 392)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 46)]));
    conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 406)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 46)]));
    conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 392)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 62)]));
    conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 406)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 62)]));
    conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 392)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 78)]));
    conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 406)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 78)]));
    conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 392)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 94)]));
    conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 406)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 94)]));
    conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 392)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 110)]));
    conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 406)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 110)]));
    conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 392)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 126)]));
    conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 406)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 126)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 420)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 15)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 434)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 15)]));
    conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 420)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 31)]));
    conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 434)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 31)]));
    conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 420)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 47)]));
    conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 434)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 47)]));
    conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 420)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 63)]));
    conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 434)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 63)]));
    conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 420)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 79)]));
    conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 434)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 79)]));
    conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 420)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 95)]));
    conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 434)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 95)]));
    conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 420)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 111)]));
    conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 434)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 111)]));
    conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 420)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 127)]));
    conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 434)] * kernel_shared[(((((int)threadIdx.x) / 14) * 128) + 127)]));
  }
  for (int i1_inner = 0; i1_inner < 8; ++i1_inner) {
    for (int i2_inner = 0; i2_inner < 2; ++i2_inner) {
      compute[(((((((((int)blockIdx.x) / 7) * 25088) + ((((int)threadIdx.x) / 14) * 1568)) + (i1_inner * 196)) + ((((int)blockIdx.x) % 7) * 28)) + (i2_inner * 14)) + (((int)threadIdx.x) % 14))] = max(conv2d_nchw[((i1_inner * 2) + i2_inner)], 0.000000e+00f);
    }
  }
}


