#include "hip/hip_runtime.h"

#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(56) candidate0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
  float conv2d_nchw[2];
  __shared__ float pad_temp_shared[112];
  __shared__ float kernel_shared[256];
  conv2d_nchw[0] = 0.000000e+00f;
  conv2d_nchw[1] = 0.000000e+00f;
  pad_temp_shared[((int)threadIdx.x)] = data[((((((int)threadIdx.x) / 7) * 3136) + ((((int)blockIdx.x) % 448) * 7)) + (((int)threadIdx.x) % 7))];
  pad_temp_shared[(((int)threadIdx.x) + 56)] = data[(((((((int)threadIdx.x) / 7) * 3136) + ((((int)blockIdx.x) % 448) * 7)) + (((int)threadIdx.x) % 7)) + 25088)];
  kernel_shared[(((int)threadIdx.x) * 2)] = kernel[((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2))];
  kernel_shared[((((int)threadIdx.x) * 2) + 1)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 1)];
  kernel_shared[((((int)threadIdx.x) * 2) + 112)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 896)];
  kernel_shared[((((int)threadIdx.x) * 2) + 113)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 897)];
  if (((int)threadIdx.x) < 16) {
    kernel_shared[((((int)threadIdx.x) * 2) + 224)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 1792)];
    kernel_shared[((((int)threadIdx.x) * 2) + 225)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 1793)];
  }
  __syncthreads();
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[((((int)threadIdx.x) / 7) * 16)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 128)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 1)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 129)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 2)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 130)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 3)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 131)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 4)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 132)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 5)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 133)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 6)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 134)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 7)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 135)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 8)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 136)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 9)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 137)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 10)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 138)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 11)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 139)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 12)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 140)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 13)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 141)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 14)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 142)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 15)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 143)]));
  __syncthreads();
  pad_temp_shared[((int)threadIdx.x)] = data[(((((((int)threadIdx.x) / 7) * 3136) + ((((int)blockIdx.x) % 448) * 7)) + (((int)threadIdx.x) % 7)) + 50176)];
  pad_temp_shared[(((int)threadIdx.x) + 56)] = data[(((((((int)threadIdx.x) / 7) * 3136) + ((((int)blockIdx.x) % 448) * 7)) + (((int)threadIdx.x) % 7)) + 75264)];
  kernel_shared[(((int)threadIdx.x) * 2)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 16)];
  kernel_shared[((((int)threadIdx.x) * 2) + 1)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 17)];
  kernel_shared[((((int)threadIdx.x) * 2) + 112)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 912)];
  kernel_shared[((((int)threadIdx.x) * 2) + 113)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 913)];
  if (((int)threadIdx.x) < 16) {
    kernel_shared[((((int)threadIdx.x) * 2) + 224)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 1808)];
    kernel_shared[((((int)threadIdx.x) * 2) + 225)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 1809)];
  }
  __syncthreads();
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[((((int)threadIdx.x) / 7) * 16)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 128)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 1)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 129)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 2)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 130)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 3)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 131)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 4)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 132)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 5)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 133)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 6)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 134)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 7)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 135)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 8)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 136)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 9)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 137)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 10)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 138)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 11)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 139)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 12)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 140)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 13)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 141)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 14)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 142)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 15)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 143)]));
  __syncthreads();
  pad_temp_shared[((int)threadIdx.x)] = data[(((((((int)threadIdx.x) / 7) * 3136) + ((((int)blockIdx.x) % 448) * 7)) + (((int)threadIdx.x) % 7)) + 100352)];
  pad_temp_shared[(((int)threadIdx.x) + 56)] = data[(((((((int)threadIdx.x) / 7) * 3136) + ((((int)blockIdx.x) % 448) * 7)) + (((int)threadIdx.x) % 7)) + 125440)];
  kernel_shared[(((int)threadIdx.x) * 2)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 32)];
  kernel_shared[((((int)threadIdx.x) * 2) + 1)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 33)];
  kernel_shared[((((int)threadIdx.x) * 2) + 112)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 928)];
  kernel_shared[((((int)threadIdx.x) * 2) + 113)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 929)];
  if (((int)threadIdx.x) < 16) {
    kernel_shared[((((int)threadIdx.x) * 2) + 224)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 1824)];
    kernel_shared[((((int)threadIdx.x) * 2) + 225)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 1825)];
  }
  __syncthreads();
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[((((int)threadIdx.x) / 7) * 16)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 128)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 1)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 129)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 2)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 130)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 3)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 131)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 4)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 132)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 5)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 133)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 6)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 134)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 7)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 135)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 8)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 136)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 9)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 137)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 10)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 138)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 11)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 139)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 12)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 140)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 13)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 141)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 14)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 142)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 15)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 143)]));
  __syncthreads();
  pad_temp_shared[((int)threadIdx.x)] = data[(((((((int)threadIdx.x) / 7) * 3136) + ((((int)blockIdx.x) % 448) * 7)) + (((int)threadIdx.x) % 7)) + 150528)];
  pad_temp_shared[(((int)threadIdx.x) + 56)] = data[(((((((int)threadIdx.x) / 7) * 3136) + ((((int)blockIdx.x) % 448) * 7)) + (((int)threadIdx.x) % 7)) + 175616)];
  kernel_shared[(((int)threadIdx.x) * 2)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 48)];
  kernel_shared[((((int)threadIdx.x) * 2) + 1)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 49)];
  kernel_shared[((((int)threadIdx.x) * 2) + 112)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 944)];
  kernel_shared[((((int)threadIdx.x) * 2) + 113)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 945)];
  if (((int)threadIdx.x) < 16) {
    kernel_shared[((((int)threadIdx.x) * 2) + 224)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 1840)];
    kernel_shared[((((int)threadIdx.x) * 2) + 225)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 1841)];
  }
  __syncthreads();
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[((((int)threadIdx.x) / 7) * 16)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 128)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 1)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 129)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 2)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 130)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 3)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 131)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 4)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 132)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 5)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 133)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 6)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 134)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 7)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 135)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 8)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 136)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 9)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 137)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 10)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 138)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 11)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 139)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 12)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 140)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 13)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 141)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 14)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 142)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 15)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 143)]));
  __syncthreads();
  pad_temp_shared[((int)threadIdx.x)] = data[(((((((int)threadIdx.x) / 7) * 3136) + ((((int)blockIdx.x) % 448) * 7)) + (((int)threadIdx.x) % 7)) + 200704)];
  pad_temp_shared[(((int)threadIdx.x) + 56)] = data[(((((((int)threadIdx.x) / 7) * 3136) + ((((int)blockIdx.x) % 448) * 7)) + (((int)threadIdx.x) % 7)) + 225792)];
  kernel_shared[(((int)threadIdx.x) * 2)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 64)];
  kernel_shared[((((int)threadIdx.x) * 2) + 1)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 65)];
  kernel_shared[((((int)threadIdx.x) * 2) + 112)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 960)];
  kernel_shared[((((int)threadIdx.x) * 2) + 113)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 961)];
  if (((int)threadIdx.x) < 16) {
    kernel_shared[((((int)threadIdx.x) * 2) + 224)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 1856)];
    kernel_shared[((((int)threadIdx.x) * 2) + 225)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 1857)];
  }
  __syncthreads();
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[((((int)threadIdx.x) / 7) * 16)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 128)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 1)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 129)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 2)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 130)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 3)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 131)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 4)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 132)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 5)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 133)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 6)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 134)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 7)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 135)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 8)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 136)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 9)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 137)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 10)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 138)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 11)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 139)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 12)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 140)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 13)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 141)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 14)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 142)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 15)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 143)]));
  __syncthreads();
  pad_temp_shared[((int)threadIdx.x)] = data[(((((((int)threadIdx.x) / 7) * 3136) + ((((int)blockIdx.x) % 448) * 7)) + (((int)threadIdx.x) % 7)) + 250880)];
  pad_temp_shared[(((int)threadIdx.x) + 56)] = data[(((((((int)threadIdx.x) / 7) * 3136) + ((((int)blockIdx.x) % 448) * 7)) + (((int)threadIdx.x) % 7)) + 275968)];
  kernel_shared[(((int)threadIdx.x) * 2)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 80)];
  kernel_shared[((((int)threadIdx.x) * 2) + 1)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 81)];
  kernel_shared[((((int)threadIdx.x) * 2) + 112)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 976)];
  kernel_shared[((((int)threadIdx.x) * 2) + 113)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 977)];
  if (((int)threadIdx.x) < 16) {
    kernel_shared[((((int)threadIdx.x) * 2) + 224)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 1872)];
    kernel_shared[((((int)threadIdx.x) * 2) + 225)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 1873)];
  }
  __syncthreads();
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[((((int)threadIdx.x) / 7) * 16)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 128)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 1)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 129)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 2)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 130)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 3)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 131)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 4)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 132)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 5)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 133)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 6)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 134)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 7)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 135)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 8)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 136)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 9)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 137)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 10)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 138)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 11)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 139)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 12)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 140)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 13)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 141)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 14)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 142)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 15)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 143)]));
  __syncthreads();
  pad_temp_shared[((int)threadIdx.x)] = data[(((((((int)threadIdx.x) / 7) * 3136) + ((((int)blockIdx.x) % 448) * 7)) + (((int)threadIdx.x) % 7)) + 301056)];
  pad_temp_shared[(((int)threadIdx.x) + 56)] = data[(((((((int)threadIdx.x) / 7) * 3136) + ((((int)blockIdx.x) % 448) * 7)) + (((int)threadIdx.x) % 7)) + 326144)];
  kernel_shared[(((int)threadIdx.x) * 2)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 96)];
  kernel_shared[((((int)threadIdx.x) * 2) + 1)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 97)];
  kernel_shared[((((int)threadIdx.x) * 2) + 112)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 992)];
  kernel_shared[((((int)threadIdx.x) * 2) + 113)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 993)];
  if (((int)threadIdx.x) < 16) {
    kernel_shared[((((int)threadIdx.x) * 2) + 224)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 1888)];
    kernel_shared[((((int)threadIdx.x) * 2) + 225)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 1889)];
  }
  __syncthreads();
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[((((int)threadIdx.x) / 7) * 16)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 128)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 1)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 129)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 2)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 130)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 3)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 131)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 4)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 132)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 5)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 133)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 6)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 134)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 7)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 135)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 8)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 136)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 9)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 137)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 10)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 138)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 11)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 139)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 12)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 140)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 13)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 141)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 14)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 142)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 15)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 143)]));
  __syncthreads();
  pad_temp_shared[((int)threadIdx.x)] = data[(((((((int)threadIdx.x) / 7) * 3136) + ((((int)blockIdx.x) % 448) * 7)) + (((int)threadIdx.x) % 7)) + 351232)];
  pad_temp_shared[(((int)threadIdx.x) + 56)] = data[(((((((int)threadIdx.x) / 7) * 3136) + ((((int)blockIdx.x) % 448) * 7)) + (((int)threadIdx.x) % 7)) + 376320)];
  kernel_shared[(((int)threadIdx.x) * 2)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 112)];
  kernel_shared[((((int)threadIdx.x) * 2) + 1)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 113)];
  kernel_shared[((((int)threadIdx.x) * 2) + 112)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 1008)];
  kernel_shared[((((int)threadIdx.x) * 2) + 113)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 1009)];
  if (((int)threadIdx.x) < 16) {
    kernel_shared[((((int)threadIdx.x) * 2) + 224)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 1904)];
    kernel_shared[((((int)threadIdx.x) * 2) + 225)] = kernel[(((((((int)blockIdx.x) / 448) * 2048) + ((((int)threadIdx.x) >> 3) * 128)) + ((((int)threadIdx.x) & 7) * 2)) + 1905)];
  }
  __syncthreads();
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[((((int)threadIdx.x) / 7) * 16)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 128)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 1)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 129)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 2)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 130)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 3)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 131)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 4)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 132)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 5)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 133)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 6)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 134)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 7)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 135)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 8)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 136)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 9)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 137)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 10)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 138)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 11)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 139)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 12)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 140)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 13)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 141)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 14)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 142)]));
  conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 15)]));
  conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * kernel_shared[(((((int)threadIdx.x) / 7) * 16) + 143)]));
  compute[(((((((int)blockIdx.x) / 448) * 50176) + ((((int)threadIdx.x) / 7) * 3136)) + ((((int)blockIdx.x) % 448) * 7)) + (((int)threadIdx.x) % 7))] = max((conv2d_nchw[0] + bias[(((((int)blockIdx.x) / 448) * 16) + (((int)threadIdx.x) / 7))]), 0.000000e+00f);
  compute[((((((((int)blockIdx.x) / 448) * 50176) + ((((int)threadIdx.x) / 7) * 3136)) + ((((int)blockIdx.x) % 448) * 7)) + (((int)threadIdx.x) % 7)) + 25088)] = max((conv2d_nchw[1] + bias[((((((int)blockIdx.x) / 448) * 16) + (((int)threadIdx.x) / 7)) + 8)]), 0.000000e+00f);
}


