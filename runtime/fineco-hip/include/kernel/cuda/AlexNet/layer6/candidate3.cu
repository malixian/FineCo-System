#include "hip/hip_runtime.h"

#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(78) candidate3(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
  float conv2d_nchw[2];
  __shared__ float pad_temp_shared[624];
  __shared__ float kernel_shared[576];
  conv2d_nchw[0] = 0.000000e+00f;
  conv2d_nchw[1] = 0.000000e+00f;
  for (int rc_outer_outer = 0; rc_outer_outer < 12; ++rc_outer_outer) {
    __syncthreads();
    pad_temp_shared[((int)threadIdx.x)] = ((((1 <= (((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13))) && ((((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13)) < 14)) && (1 <= (((int)threadIdx.x) % 13))) ? data[(((((rc_outer_outer * 2704) + ((((int)threadIdx.x) / 39) * 169)) + ((((int)blockIdx.x) % 13) * 13)) + (((int)threadIdx.x) % 39)) - 14)] : 0.000000e+00f);
    pad_temp_shared[(((int)threadIdx.x) + 78)] = ((((1 <= (((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13))) && ((((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13)) < 14)) && (1 <= (((int)threadIdx.x) % 13))) ? data[(((((rc_outer_outer * 2704) + ((((int)threadIdx.x) / 39) * 169)) + ((((int)blockIdx.x) % 13) * 13)) + (((int)threadIdx.x) % 39)) + 324)] : 0.000000e+00f);
    pad_temp_shared[(((int)threadIdx.x) + 156)] = ((((1 <= (((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13))) && ((((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13)) < 14)) && (1 <= (((int)threadIdx.x) % 13))) ? data[(((((rc_outer_outer * 2704) + ((((int)threadIdx.x) / 39) * 169)) + ((((int)blockIdx.x) % 13) * 13)) + (((int)threadIdx.x) % 39)) + 662)] : 0.000000e+00f);
    pad_temp_shared[(((int)threadIdx.x) + 234)] = ((((1 <= (((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13))) && ((((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13)) < 14)) && (1 <= (((int)threadIdx.x) % 13))) ? data[(((((rc_outer_outer * 2704) + ((((int)threadIdx.x) / 39) * 169)) + ((((int)blockIdx.x) % 13) * 13)) + (((int)threadIdx.x) % 39)) + 1000)] : 0.000000e+00f);
    pad_temp_shared[(((int)threadIdx.x) + 312)] = ((((1 <= (((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13))) && ((((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13)) < 14)) && (1 <= (((int)threadIdx.x) % 13))) ? data[(((((rc_outer_outer * 2704) + ((((int)threadIdx.x) / 39) * 169)) + ((((int)blockIdx.x) % 13) * 13)) + (((int)threadIdx.x) % 39)) + 1338)] : 0.000000e+00f);
    pad_temp_shared[(((int)threadIdx.x) + 390)] = ((((1 <= (((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13))) && ((((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13)) < 14)) && (1 <= (((int)threadIdx.x) % 13))) ? data[(((((rc_outer_outer * 2704) + ((((int)threadIdx.x) / 39) * 169)) + ((((int)blockIdx.x) % 13) * 13)) + (((int)threadIdx.x) % 39)) + 1676)] : 0.000000e+00f);
    pad_temp_shared[(((int)threadIdx.x) + 468)] = ((((1 <= (((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13))) && ((((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13)) < 14)) && (1 <= (((int)threadIdx.x) % 13))) ? data[(((((rc_outer_outer * 2704) + ((((int)threadIdx.x) / 39) * 169)) + ((((int)blockIdx.x) % 13) * 13)) + (((int)threadIdx.x) % 39)) + 2014)] : 0.000000e+00f);
    pad_temp_shared[(((int)threadIdx.x) + 546)] = ((((1 <= (((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13))) && ((((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13)) < 14)) && (1 <= (((int)threadIdx.x) % 13))) ? data[(((((rc_outer_outer * 2704) + ((((int)threadIdx.x) / 39) * 169)) + ((((int)blockIdx.x) % 13) * 13)) + (((int)threadIdx.x) % 39)) + 2352)] : 0.000000e+00f);
    kernel_shared[((int)threadIdx.x)] = kernel[(((((((int)blockIdx.x) / 13) * 20736) + ((((int)threadIdx.x) / 48) * 1728)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3))];
    kernel_shared[(((int)threadIdx.x) + 78)] = kernel[((((((((int)blockIdx.x) / 13) * 20736) + (((((int)threadIdx.x) + 78) / 48) * 1728)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) / 3) + 10) & 15) * 9)) + ((((int)threadIdx.x) % 3) * 3))];
    kernel_shared[(((int)threadIdx.x) + 156)] = kernel[((((((((int)blockIdx.x) / 13) * 20736) + (((((int)threadIdx.x) + 156) / 48) * 1728)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) / 3) + 4) & 15) * 9)) + ((((int)threadIdx.x) % 3) * 3))];
    kernel_shared[(((int)threadIdx.x) + 234)] = kernel[((((((((int)blockIdx.x) / 13) * 20736) + (((((int)threadIdx.x) + 234) / 48) * 1728)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) / 3) + 14) & 15) * 9)) + ((((int)threadIdx.x) % 3) * 3))];
    kernel_shared[(((int)threadIdx.x) + 312)] = kernel[((((((((int)blockIdx.x) / 13) * 20736) + (((((int)threadIdx.x) + 312) / 48) * 1728)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) / 3) + 8) & 15) * 9)) + ((((int)threadIdx.x) % 3) * 3))];
    kernel_shared[(((int)threadIdx.x) + 390)] = kernel[((((((((int)blockIdx.x) / 13) * 20736) + (((((int)threadIdx.x) + 390) / 48) * 1728)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) / 3) + 2) & 15) * 9)) + ((((int)threadIdx.x) % 3) * 3))];
    kernel_shared[(((int)threadIdx.x) + 468)] = kernel[((((((((int)blockIdx.x) / 13) * 20736) + (((((int)threadIdx.x) + 468) / 48) * 1728)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) / 3) + 12) & 15) * 9)) + ((((int)threadIdx.x) % 3) * 3))];
    if (((int)threadIdx.x) < 30) {
      kernel_shared[(((int)threadIdx.x) + 546)] = kernel[((((((((int)blockIdx.x) / 13) * 20736) + (((((int)threadIdx.x) + 546) / 48) * 1728)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) / 3) + 6) * 9)) + ((((int)threadIdx.x) % 3) * 3))];
    }
    __syncthreads();
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) % 13)] * kernel_shared[((((int)threadIdx.x) / 13) * 96)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) % 13)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 48)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 39)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 3)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 39)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 51)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 13)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 1)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 13)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 49)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 52)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 4)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 52)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 52)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 26)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 2)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 26)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 50)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 65)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 5)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 65)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 53)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 78)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 6)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 78)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 54)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 117)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 9)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 117)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 57)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 91)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 7)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 91)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 55)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 130)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 10)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 130)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 58)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 104)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 8)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 104)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 56)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 143)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 11)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 143)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 59)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 156)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 12)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 156)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 60)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 195)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 15)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 195)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 63)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 169)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 13)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 169)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 61)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 208)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 16)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 208)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 64)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 182)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 14)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 182)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 62)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 221)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 17)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 221)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 65)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 234)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 18)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 234)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 66)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 273)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 21)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 273)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 69)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 247)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 19)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 247)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 67)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 286)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 22)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 286)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 70)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 260)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 20)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 260)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 68)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 299)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 23)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 299)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 71)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 312)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 24)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 312)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 72)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 351)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 27)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 351)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 75)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 325)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 25)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 325)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 73)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 364)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 28)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 364)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 76)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 338)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 26)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 338)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 74)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 377)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 29)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 377)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 77)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 390)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 30)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 390)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 78)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 429)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 33)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 429)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 81)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 403)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 31)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 403)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 79)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 442)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 34)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 442)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 82)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 416)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 32)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 416)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 80)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 455)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 35)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 455)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 83)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 468)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 36)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 468)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 84)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 507)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 39)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 507)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 87)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 481)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 37)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 481)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 85)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 520)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 40)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 520)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 88)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 494)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 38)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 494)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 86)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 533)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 41)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 533)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 89)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 546)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 42)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 546)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 90)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 585)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 45)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 585)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 93)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 559)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 43)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 559)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 91)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 598)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 46)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 598)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 94)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 572)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 44)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 572)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 92)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 611)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 47)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 611)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 95)]));
    __syncthreads();
    pad_temp_shared[((int)threadIdx.x)] = (((1 <= (((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13))) && ((((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13)) < 14)) ? data[(((((rc_outer_outer * 2704) + ((((int)threadIdx.x) / 39) * 169)) + ((((int)blockIdx.x) % 13) * 13)) + (((int)threadIdx.x) % 39)) - 13)] : 0.000000e+00f);
    pad_temp_shared[(((int)threadIdx.x) + 78)] = (((1 <= (((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13))) && ((((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13)) < 14)) ? data[(((((rc_outer_outer * 2704) + ((((int)threadIdx.x) / 39) * 169)) + ((((int)blockIdx.x) % 13) * 13)) + (((int)threadIdx.x) % 39)) + 325)] : 0.000000e+00f);
    pad_temp_shared[(((int)threadIdx.x) + 156)] = (((1 <= (((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13))) && ((((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13)) < 14)) ? data[(((((rc_outer_outer * 2704) + ((((int)threadIdx.x) / 39) * 169)) + ((((int)blockIdx.x) % 13) * 13)) + (((int)threadIdx.x) % 39)) + 663)] : 0.000000e+00f);
    pad_temp_shared[(((int)threadIdx.x) + 234)] = (((1 <= (((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13))) && ((((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13)) < 14)) ? data[(((((rc_outer_outer * 2704) + ((((int)threadIdx.x) / 39) * 169)) + ((((int)blockIdx.x) % 13) * 13)) + (((int)threadIdx.x) % 39)) + 1001)] : 0.000000e+00f);
    pad_temp_shared[(((int)threadIdx.x) + 312)] = (((1 <= (((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13))) && ((((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13)) < 14)) ? data[(((((rc_outer_outer * 2704) + ((((int)threadIdx.x) / 39) * 169)) + ((((int)blockIdx.x) % 13) * 13)) + (((int)threadIdx.x) % 39)) + 1339)] : 0.000000e+00f);
    pad_temp_shared[(((int)threadIdx.x) + 390)] = (((1 <= (((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13))) && ((((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13)) < 14)) ? data[(((((rc_outer_outer * 2704) + ((((int)threadIdx.x) / 39) * 169)) + ((((int)blockIdx.x) % 13) * 13)) + (((int)threadIdx.x) % 39)) + 1677)] : 0.000000e+00f);
    pad_temp_shared[(((int)threadIdx.x) + 468)] = (((1 <= (((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13))) && ((((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13)) < 14)) ? data[(((((rc_outer_outer * 2704) + ((((int)threadIdx.x) / 39) * 169)) + ((((int)blockIdx.x) % 13) * 13)) + (((int)threadIdx.x) % 39)) + 2015)] : 0.000000e+00f);
    pad_temp_shared[(((int)threadIdx.x) + 546)] = (((1 <= (((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13))) && ((((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13)) < 14)) ? data[(((((rc_outer_outer * 2704) + ((((int)threadIdx.x) / 39) * 169)) + ((((int)blockIdx.x) % 13) * 13)) + (((int)threadIdx.x) % 39)) + 2353)] : 0.000000e+00f);
    kernel_shared[((int)threadIdx.x)] = kernel[((((((((int)blockIdx.x) / 13) * 20736) + ((((int)threadIdx.x) / 48) * 1728)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + 1)];
    kernel_shared[(((int)threadIdx.x) + 78)] = kernel[(((((((((int)blockIdx.x) / 13) * 20736) + (((((int)threadIdx.x) + 78) / 48) * 1728)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) / 3) + 10) & 15) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + 1)];
    kernel_shared[(((int)threadIdx.x) + 156)] = kernel[(((((((((int)blockIdx.x) / 13) * 20736) + (((((int)threadIdx.x) + 156) / 48) * 1728)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) / 3) + 4) & 15) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + 1)];
    kernel_shared[(((int)threadIdx.x) + 234)] = kernel[(((((((((int)blockIdx.x) / 13) * 20736) + (((((int)threadIdx.x) + 234) / 48) * 1728)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) / 3) + 14) & 15) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + 1)];
    kernel_shared[(((int)threadIdx.x) + 312)] = kernel[(((((((((int)blockIdx.x) / 13) * 20736) + (((((int)threadIdx.x) + 312) / 48) * 1728)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) / 3) + 8) & 15) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + 1)];
    kernel_shared[(((int)threadIdx.x) + 390)] = kernel[(((((((((int)blockIdx.x) / 13) * 20736) + (((((int)threadIdx.x) + 390) / 48) * 1728)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) / 3) + 2) & 15) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + 1)];
    kernel_shared[(((int)threadIdx.x) + 468)] = kernel[(((((((((int)blockIdx.x) / 13) * 20736) + (((((int)threadIdx.x) + 468) / 48) * 1728)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) / 3) + 12) & 15) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + 1)];
    if (((int)threadIdx.x) < 30) {
      kernel_shared[(((int)threadIdx.x) + 546)] = kernel[(((((((((int)blockIdx.x) / 13) * 20736) + (((((int)threadIdx.x) + 546) / 48) * 1728)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) / 3) + 6) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + 1)];
    }
    __syncthreads();
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) % 13)] * kernel_shared[((((int)threadIdx.x) / 13) * 96)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) % 13)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 48)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 39)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 3)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 39)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 51)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 13)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 1)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 13)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 49)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 52)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 4)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 52)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 52)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 26)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 2)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 26)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 50)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 65)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 5)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 65)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 53)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 78)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 6)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 78)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 54)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 117)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 9)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 117)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 57)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 91)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 7)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 91)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 55)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 130)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 10)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 130)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 58)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 104)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 8)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 104)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 56)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 143)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 11)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 143)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 59)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 156)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 12)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 156)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 60)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 195)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 15)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 195)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 63)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 169)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 13)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 169)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 61)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 208)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 16)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 208)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 64)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 182)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 14)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 182)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 62)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 221)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 17)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 221)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 65)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 234)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 18)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 234)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 66)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 273)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 21)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 273)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 69)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 247)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 19)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 247)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 67)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 286)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 22)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 286)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 70)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 260)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 20)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 260)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 68)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 299)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 23)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 299)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 71)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 312)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 24)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 312)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 72)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 351)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 27)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 351)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 75)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 325)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 25)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 325)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 73)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 364)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 28)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 364)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 76)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 338)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 26)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 338)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 74)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 377)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 29)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 377)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 77)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 390)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 30)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 390)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 78)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 429)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 33)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 429)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 81)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 403)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 31)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 403)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 79)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 442)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 34)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 442)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 82)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 416)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 32)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 416)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 80)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 455)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 35)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 455)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 83)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 468)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 36)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 468)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 84)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 507)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 39)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 507)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 87)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 481)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 37)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 481)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 85)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 520)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 40)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 520)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 88)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 494)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 38)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 494)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 86)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 533)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 41)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 533)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 89)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 546)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 42)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 546)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 90)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 585)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 45)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 585)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 93)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 559)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 43)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 559)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 91)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 598)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 46)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 598)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 94)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 572)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 44)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 572)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 92)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 611)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 47)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 611)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 95)]));
    __syncthreads();
    pad_temp_shared[((int)threadIdx.x)] = ((((1 <= (((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13))) && ((((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13)) < 14)) && ((((int)threadIdx.x) % 13) < 12)) ? data[(((((rc_outer_outer * 2704) + ((((int)threadIdx.x) / 39) * 169)) + ((((int)blockIdx.x) % 13) * 13)) + (((int)threadIdx.x) % 39)) - 12)] : 0.000000e+00f);
    pad_temp_shared[(((int)threadIdx.x) + 78)] = ((((1 <= (((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13))) && ((((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13)) < 14)) && ((((int)threadIdx.x) % 13) < 12)) ? data[(((((rc_outer_outer * 2704) + ((((int)threadIdx.x) / 39) * 169)) + ((((int)blockIdx.x) % 13) * 13)) + (((int)threadIdx.x) % 39)) + 326)] : 0.000000e+00f);
    pad_temp_shared[(((int)threadIdx.x) + 156)] = ((((1 <= (((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13))) && ((((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13)) < 14)) && ((((int)threadIdx.x) % 13) < 12)) ? data[(((((rc_outer_outer * 2704) + ((((int)threadIdx.x) / 39) * 169)) + ((((int)blockIdx.x) % 13) * 13)) + (((int)threadIdx.x) % 39)) + 664)] : 0.000000e+00f);
    pad_temp_shared[(((int)threadIdx.x) + 234)] = ((((1 <= (((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13))) && ((((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13)) < 14)) && ((((int)threadIdx.x) % 13) < 12)) ? data[(((((rc_outer_outer * 2704) + ((((int)threadIdx.x) / 39) * 169)) + ((((int)blockIdx.x) % 13) * 13)) + (((int)threadIdx.x) % 39)) + 1002)] : 0.000000e+00f);
    pad_temp_shared[(((int)threadIdx.x) + 312)] = ((((1 <= (((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13))) && ((((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13)) < 14)) && ((((int)threadIdx.x) % 13) < 12)) ? data[(((((rc_outer_outer * 2704) + ((((int)threadIdx.x) / 39) * 169)) + ((((int)blockIdx.x) % 13) * 13)) + (((int)threadIdx.x) % 39)) + 1340)] : 0.000000e+00f);
    pad_temp_shared[(((int)threadIdx.x) + 390)] = ((((1 <= (((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13))) && ((((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13)) < 14)) && ((((int)threadIdx.x) % 13) < 12)) ? data[(((((rc_outer_outer * 2704) + ((((int)threadIdx.x) / 39) * 169)) + ((((int)blockIdx.x) % 13) * 13)) + (((int)threadIdx.x) % 39)) + 1678)] : 0.000000e+00f);
    pad_temp_shared[(((int)threadIdx.x) + 468)] = ((((1 <= (((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13))) && ((((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13)) < 14)) && ((((int)threadIdx.x) % 13) < 12)) ? data[(((((rc_outer_outer * 2704) + ((((int)threadIdx.x) / 39) * 169)) + ((((int)blockIdx.x) % 13) * 13)) + (((int)threadIdx.x) % 39)) + 2016)] : 0.000000e+00f);
    pad_temp_shared[(((int)threadIdx.x) + 546)] = ((((1 <= (((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13))) && ((((((int)threadIdx.x) % 39) / 13) + (((int)blockIdx.x) % 13)) < 14)) && ((((int)threadIdx.x) % 13) < 12)) ? data[(((((rc_outer_outer * 2704) + ((((int)threadIdx.x) / 39) * 169)) + ((((int)blockIdx.x) % 13) * 13)) + (((int)threadIdx.x) % 39)) + 2354)] : 0.000000e+00f);
    kernel_shared[((int)threadIdx.x)] = kernel[((((((((int)blockIdx.x) / 13) * 20736) + ((((int)threadIdx.x) / 48) * 1728)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + 2)];
    kernel_shared[(((int)threadIdx.x) + 78)] = kernel[(((((((((int)blockIdx.x) / 13) * 20736) + (((((int)threadIdx.x) + 78) / 48) * 1728)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) / 3) + 10) & 15) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + 2)];
    kernel_shared[(((int)threadIdx.x) + 156)] = kernel[(((((((((int)blockIdx.x) / 13) * 20736) + (((((int)threadIdx.x) + 156) / 48) * 1728)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) / 3) + 4) & 15) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + 2)];
    kernel_shared[(((int)threadIdx.x) + 234)] = kernel[(((((((((int)blockIdx.x) / 13) * 20736) + (((((int)threadIdx.x) + 234) / 48) * 1728)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) / 3) + 14) & 15) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + 2)];
    kernel_shared[(((int)threadIdx.x) + 312)] = kernel[(((((((((int)blockIdx.x) / 13) * 20736) + (((((int)threadIdx.x) + 312) / 48) * 1728)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) / 3) + 8) & 15) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + 2)];
    kernel_shared[(((int)threadIdx.x) + 390)] = kernel[(((((((((int)blockIdx.x) / 13) * 20736) + (((((int)threadIdx.x) + 390) / 48) * 1728)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) / 3) + 2) & 15) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + 2)];
    kernel_shared[(((int)threadIdx.x) + 468)] = kernel[(((((((((int)blockIdx.x) / 13) * 20736) + (((((int)threadIdx.x) + 468) / 48) * 1728)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) / 3) + 12) & 15) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + 2)];
    if (((int)threadIdx.x) < 30) {
      kernel_shared[(((int)threadIdx.x) + 546)] = kernel[(((((((((int)blockIdx.x) / 13) * 20736) + (((((int)threadIdx.x) + 546) / 48) * 1728)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) / 3) + 6) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + 2)];
    }
    __syncthreads();
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) % 13)] * kernel_shared[((((int)threadIdx.x) / 13) * 96)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((int)threadIdx.x) % 13)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 48)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 39)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 3)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 39)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 51)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 13)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 1)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 13)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 49)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 52)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 4)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 52)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 52)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 26)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 2)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 26)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 50)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 65)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 5)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 65)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 53)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 78)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 6)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 78)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 54)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 117)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 9)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 117)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 57)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 91)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 7)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 91)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 55)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 130)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 10)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 130)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 58)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 104)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 8)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 104)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 56)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 143)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 11)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 143)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 59)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 156)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 12)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 156)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 60)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 195)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 15)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 195)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 63)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 169)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 13)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 169)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 61)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 208)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 16)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 208)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 64)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 182)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 14)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 182)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 62)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 221)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 17)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 221)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 65)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 234)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 18)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 234)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 66)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 273)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 21)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 273)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 69)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 247)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 19)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 247)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 67)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 286)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 22)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 286)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 70)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 260)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 20)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 260)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 68)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 299)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 23)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 299)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 71)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 312)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 24)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 312)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 72)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 351)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 27)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 351)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 75)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 325)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 25)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 325)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 73)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 364)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 28)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 364)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 76)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 338)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 26)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 338)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 74)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 377)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 29)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 377)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 77)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 390)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 30)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 390)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 78)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 429)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 33)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 429)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 81)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 403)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 31)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 403)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 79)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 442)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 34)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 442)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 82)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 416)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 32)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 416)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 80)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 455)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 35)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 455)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 83)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 468)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 36)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 468)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 84)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 507)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 39)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 507)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 87)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 481)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 37)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 481)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 85)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 520)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 40)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 520)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 88)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 494)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 38)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 494)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 86)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 533)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 41)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 533)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 89)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 546)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 42)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 546)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 90)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 585)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 45)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 585)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 93)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 559)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 43)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 559)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 91)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 598)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 46)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 598)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 94)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 572)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 44)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 572)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 92)]));
    conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 611)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 47)]));
    conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 13) + 611)] * kernel_shared[(((((int)threadIdx.x) / 13) * 96) + 95)]));
  }
  for (int i1_inner = 0; i1_inner < 2; ++i1_inner) {
    compute[((((((((int)blockIdx.x) / 13) * 2028) + ((((int)threadIdx.x) / 13) * 338)) + (i1_inner * 169)) + ((((int)blockIdx.x) % 13) * 13)) + (((int)threadIdx.x) % 13))] = max((conv2d_nchw[i1_inner] + bias[((((((int)blockIdx.x) / 13) * 12) + ((((int)threadIdx.x) / 13) * 2)) + i1_inner)]), 0.000000e+00f);
  }
}


